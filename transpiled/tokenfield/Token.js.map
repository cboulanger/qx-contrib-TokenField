{
  "version": 3,
  "sources": [
    "source/class/tokenfield/Token.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "form",
    "AbstractSelectBox",
    "implement",
    "core",
    "IMultiSelection",
    "IModelSelection",
    "include",
    "MMultiSelectionHandling",
    "MModelSelection",
    "events",
    "addItem",
    "removeItem",
    "loadData",
    "enterKeyWithContent",
    "properties",
    "appearance",
    "refine",
    "init",
    "typeInText",
    "check",
    "nullable",
    "event",
    "hintText",
    "noResultsText",
    "searchingText",
    "searchDelay",
    "minChars",
    "tokenLimit",
    "selectOnce",
    "labelPath",
    "style",
    "delegate",
    "apply",
    "labelOptions",
    "iconOptions",
    "iconPath",
    "text",
    "closeWhenNoResults",
    "showCloseButton",
    "wildcards",
    "construct",
    "_tokenClass",
    "ListItem",
    "cache",
    "tokenfield",
    "Cache",
    "_setLayout",
    "layout",
    "Flow",
    "textField",
    "_createChildControl",
    "label",
    "getApplicationRoot",
    "add",
    "top",
    "left",
    "setAppearance",
    "getAppearance",
    "bind",
    "addListener",
    "setWidth",
    "getBounds",
    "e",
    "stop",
    "_onClick",
    "fireNonBubblingEvent",
    "type",
    "Focus",
    "setLiveUpdate",
    "_onInputChange",
    "setMinWidth",
    "_search",
    "_dummy",
    "setEnabled",
    "getChildControl",
    "setHintText",
    "getTypeInText",
    "members",
    "SELECTION_MANAGER",
    "SelectionManager",
    "_createChildControlImpl",
    "id",
    "control",
    "basic",
    "Label",
    "hide",
    "TextField",
    "setFocusable",
    "addState",
    "close",
    "_add",
    "setSelectionMode",
    "popup",
    "Popup",
    "VBox",
    "setAutoHide",
    "setKeepActive",
    "_onPopupChangeVisibility",
    "_applyDelegate",
    "value",
    "hasOwnProperty",
    "createItem",
    "constructor",
    "_createBoundItem",
    "model",
    "item",
    "__createItem",
    "__bindItem",
    "getDelegate",
    "configureItem",
    "setRich",
    "bindItem",
    "bindDefaultProperties",
    "setModel",
    "getLabelPath",
    "getLabelOptions",
    "getIconPath",
    "getIconOptions",
    "focus",
    "getFocusElement",
    "tabFocus",
    "field",
    "tabBlur",
    "blur",
    "_forwardStates",
    "focused",
    "_onBlur",
    "__selected",
    "removeState",
    "toggle",
    "_onKeyPress",
    "key",
    "getKeyIdentifier",
    "children",
    "index",
    "list",
    "textfield",
    "isVisible",
    "open",
    "stopPropagation",
    "getValue",
    "_getChildren",
    "indexOf",
    "length",
    "_deselectItem",
    "start",
    "getTextSelectionStart",
    "getTextSelectionLength",
    "n_children",
    "data",
    "_addBefore",
    "_addAfter",
    "util",
    "TimerManager",
    "getInstance",
    "trim",
    "__preSelectedItem",
    "_selectItem",
    "setValue",
    "getChildren",
    "selectItem",
    "fireDataEvent",
    "getSelection",
    "handleKeyPress",
    "str",
    "getData",
    "timer",
    "__timerId",
    "getMinChars",
    "setText",
    "search",
    "getSearchDelay",
    "_onListPointerDown",
    "_onListChangeSelection",
    "current",
    "context",
    "getSelectionContext",
    "removeAll",
    "setLabel",
    "getSearchingText",
    "populateList",
    "marshal",
    "Json",
    "createModel",
    "result",
    "get",
    "getLength",
    "isCloseWhenNoResults",
    "resetText",
    "setLabelOptions",
    "converter",
    "highlight",
    "i",
    "getSelectOnce",
    "_isSelected",
    "getItem",
    "addToken",
    "selected",
    "hasChildren",
    "remove",
    "isInSelection",
    "some",
    "getLabel",
    "child",
    "deselectItem",
    "forEach",
    "selection",
    "getModelSelection",
    "removeFromSelection",
    "destroy",
    "getChildrenContainer",
    "reset",
    "old",
    "getModel",
    "warn",
    "getShowCloseButton",
    "setShow",
    "setIconPosition",
    "setAnonymous",
    "__imageSource",
    "getSource",
    "setSource",
    "selectAllText",
    "getStyle",
    "getWidth",
    "addToSelection",
    "query",
    "isWildcard",
    "getWildcards",
    "find",
    "w",
    "undefined",
    "replace",
    "RegExp",
    "getTokenModels",
    "models",
    "push",
    "getTokenLabels",
    "labels",
    "getTextContent",
    "tokenSeparator",
    "content",
    "join",
    "getInputPosition",
    "destruct",
    "_disposeObjects",
    "Token"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,KAAGC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC,EAsBAH,GAAGI,KAAH,CAASC,MAAT,CAAgB,kBAAhB,EACA;AACEC,YAASN,GAAGO,EAAH,CAAMC,IAAN,CAAWC,iBADtB;AAEEC,eAAY,CAACV,GAAGO,EAAH,CAAMI,IAAN,CAAWC,eAAZ,EAA6BZ,GAAGO,EAAH,CAAMC,IAAN,CAAWK,eAAxC,CAFd;AAGEC,aAAU,CAACd,GAAGO,EAAH,CAAMI,IAAN,CAAWI,uBAAZ,EAAqCf,GAAGO,EAAH,CAAMC,IAAN,CAAWQ,eAAhD,CAHZ;;AAKE;;;;;AAKAC,YACA;AACE;;;;;AAKAC,eAAU,oBANZ;;AAQE;;;;;AAKAC,kBAAa,oBAbf;;AAeE;;;;;;;AAOAC,gBAAW,oBAtBb;;AAwBE;;;;;AAKAC,2BAAqB;AA7BvB,KAXF;;AA2CE;;;;;AAKAC,gBACA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGAC,kBACA;AACEC,gBAAS,IADX;AAEEC,cAAO;AAFT,OAhBF;;AAqBE;;;AAGAC,kBACA;AACEC,eAAQ,QADV;AAEEC,kBAAW,IAFb;AAGEC,eAAQ,kBAHV;AAIEJ,cAAO;AAJT,OAzBF;;AAgCE;;;AAGAK,gBACA;AACEH,eAAQ,QADV;AAEEC,kBAAW,IAFb;AAGEC,eAAQ,gBAHV;AAIEJ,cAAO;AAJT,OApCF;;AA2CE;;;AAGAM,qBACA;AACEJ,eAAQ,QADV;AAEEC,kBAAW,IAFb;AAGEH,cAAO;AAHT,OA/CF;;AAqDE;;;;AAIAO,qBACA;AACEL,eAAQ,QADV;AAEEC,kBAAW,IAFb;AAGEH,cAAO;AAHT,OA1DF;;AAgEE;;;AAGAQ,mBAAc;AACZR,cAAO;AADK,OAnEhB;;AAuEE;;;AAGAS,gBAAW;AACTT,cAAO;AADE,OA1Eb;;AA8EE;;;AAGAU,kBACA;AACEV,cAAO,IADT;AAEEG,kBAAW;AAFb,OAlFF;;AAuFE;;;;;AAKAQ,kBACA;AACEX,cAAO,KADT;AAEEE,eAAQ;AAFV,OA7FF;;AAkGE;;;AAGAU,iBAAY;AACVZ,cAAO,OADG;AAEVI,eAAO;AAFG,OArGd;;AA0GE;;;;;AAKAS,aAAQ;AACNb,cAAO;AADD,OA/GV;;AAmHEc,gBAAU;AACRZ,eAAO,KADC;AAERF,cAAM,IAFE;AAGRe,eAAO;AAHC,OAnHZ;;AAyHE;;;;AAIAC,oBAAc;AACZb,kBAAU;AADE,OA7HhB;;AAiIE;;;;AAIAc,mBAAa;AACXd,kBAAU;AADC,OArIf;;AAyIE;;;AAGAe,gBAAU;AACRhB,eAAO,QADC;AAERF,cAAM,IAFE;AAGRI,eAAO;AAHC,OA5IZ;;AAkJE;;;AAGAe,YAAM;AACJjB,eAAO,QADH;AAEJF,cAAM,EAFF;AAGJI,eAAO;AAHH,OArJR;;AA2JE;;;AAGAgB,0BAAoB;AAClBlB,eAAO,SADW;AAElBF,cAAM;AAFY,OA9JtB;;AAmKE;;;AAGAqB,uBAAiB;AACfnB,eAAO,SADQ;AAEfF,cAAM;AAFS,OAtKnB;;AA2KE;;;AAGAsB,iBAAU;AACRpB,eAAO,OADC;AAERF,cAAO;AAFC;AA9KZ,KAjDF;;AAqOE;;;;;AAKAuB,eAAW,qBACX;AACE;AACA,WAAKC,WAAL,GAAmBjD,GAAGO,EAAH,CAAMC,IAAN,CAAW0C,QAA9B;AACA,WAAKC,KAAL,GAAa,IAAIC,WAAWC,KAAf,EAAb;AACA,WAAKC,UAAL,CAAgB,IAAItD,GAAGO,EAAH,CAAMgD,MAAN,CAAaC,IAAjB,EAAhB;AACA,UAAIC,YAAY,KAAKC,mBAAL,CAAyB,WAAzB,CAAhB;AACA,UAAIC,QAAQ,KAAKD,mBAAL,CAAyB,OAAzB,CAAZ;AACA,WAAKE,kBAAL,GAA0BC,GAA1B,CAA8BF,KAA9B,EACA;AACEG,aAAM,CAAC,EADT;AAEEC,cAAO,CAAC;AAFV,OADA;AAKAJ,YAAMK,aAAN,CAAoBP,UAAUQ,aAAV,EAApB;AACAR,gBAAUS,IAAV,CAAe,OAAf,EAAwBP,KAAxB,EAA+B,OAA/B;AACAF,gBAAUU,WAAV,CAAsB,UAAtB,EAAkC,YAAY;AAC5C;AACAV,kBAAUW,QAAV,CAAmBT,MAAMU,SAAN,GAAkB,OAAlB,IAA6B,CAAhD;AACD,OAHD,EAGG,IAHH;AAIAZ,gBAAUU,WAAV,CAAsB,aAAtB,EAAqC,UAAUG,CAAV,EAAa;AAChDA,UAAEC,IAAF;AACD,OAFD;AAGA,WAAKJ,WAAL,CAAiB,OAAjB,EAA0B,KAAKK,QAA/B;;AAEA;AACA;AACA,WAAKL,WAAL,CAAiB,SAAjB,EAA4B,YAAY;AACtCV,kBAAUgB,oBAAV,CAA+B,SAA/B,EAA0CzE,GAAG6B,KAAH,CAAS6C,IAAT,CAAcC,KAAxD;AACD,OAFD,EAEG,IAFH;AAGA,WAAKR,WAAL,CAAiB,UAAjB,EAA6B,YAAY;AACvCV,kBAAUgB,oBAAV,CAA+B,UAA/B,EAA2CzE,GAAG6B,KAAH,CAAS6C,IAAT,CAAcC,KAAzD;AACD,OAFD,EAEG,IAFH;AAGAlB,gBAAUmB,aAAV,CAAwB,IAAxB;AACAnB,gBAAUU,WAAV,CAAsB,OAAtB,EAA+B,KAAKU,cAApC,EAAoD,IAApD;AACApB,gBAAUqB,WAAV,CAAsB,CAAtB;AACA,WAAKC,OAAL,GAAe,EAAf;AACA,WAAKC,MAAL,GAAc,IAAIhF,GAAGO,EAAH,CAAMC,IAAN,CAAW0C,QAAf,EAAd;AACA,WAAK8B,MAAL,CAAYC,UAAZ,CAAuB,KAAvB;AACA,WAAKf,IAAL,CAAU,UAAV,EAAsB,KAAKc,MAA3B,EAAmC,OAAnC;AACA,WAAKE,eAAL,CAAqB,MAArB,EAA6BrB,GAA7B,CAAiC,KAAKmB,MAAtC;AACA,WAAKb,WAAL,CAAiB,QAAjB,EAA2B,YAAW;AAClC,aAAKgB,WAAL,CAAiB,KAAKC,aAAL,EAAjB;AACH,OAFD,EAEE,IAFF;AAGD,KArRH;;AAuRE;;;;;AAKAC,aACA;AACEC,yBAAoBlC,WAAWmC,gBADjC;AAEER,eAAS,IAFX;AAGE9B,mBAAa,IAHf;;AAKE;;;;;;AAMA;AACAuC,+BAAyB,iCAAUC,EAAV,EACzB;AACE,YAAIC,OAAJ;AACA,gBAAQD,EAAR;AAEE,eAAK,OAAL;AACEC,sBAAU,IAAI1F,GAAGO,EAAH,CAAMoF,KAAN,CAAYC,KAAhB,EAAV;AACA;AACAF,oBAAQG,IAAR;AACA;AACF,eAAK,QAAL;AACE,mBAAO,IAAP;;AAEF,eAAK,WAAL;AACEH,sBAAU,IAAI1F,GAAGO,EAAH,CAAMC,IAAN,CAAWsF,SAAf,EAAV;AACAJ,oBAAQK,YAAR,CAAqB,KAArB;AACAL,oBAAQM,QAAR,CAAiB,OAAjB;;AAEA;AACAN,oBAAQvB,WAAR,CAAoB,MAApB,EAA4B,KAAK8B,KAAjC,EAAwC,IAAxC;AACA,iBAAKC,IAAL,CAAUR,OAAV;AACA;AACF,eAAK,MAAL;AACE;AACAA,yFAA+BD,EAA/B;;AAEA;AACAC,oBAAQS,gBAAR,CAAyB,QAAzB;AACA;AACF,eAAK,OAAL;AACET,sBAAU,IAAI1F,GAAGO,EAAH,CAAM6F,KAAN,CAAYC,KAAhB,CAAsB,IAAIrG,GAAGO,EAAH,CAAMgD,MAAN,CAAa+C,IAAjB,EAAtB,CAAV;AACAZ,oBAAQa,WAAR,CAAoB,IAApB;AACAb,oBAAQc,aAAR,CAAsB,IAAtB;AACAd,oBAAQvB,WAAR,CAAoB,WAApB,EAAiC,KAAK8B,KAAtC,EAA6C,IAA7C;AACAP,oBAAQ7B,GAAR,CAAY,KAAKqB,eAAL,CAAqB,MAArB,CAAZ;AACAQ,oBAAQvB,WAAR,CAAoB,kBAApB,EAAwC,KAAKsC,wBAA7C,EAAuE,IAAvE;AACA;AAjCJ;AAmCA,eAAOf,8EAAgCD,EAAhC,CAAP;AACD,OAnDH;;AAqDE;;;AAGAiB,sBAAgB,wBAAUC,KAAV,EAAiB;AAC/B,YAAIA,KAAJ,EAAW;AACT,cAAIA,MAAMC,cAAN,CAAqB,YAArB,CAAJ,EAAwC;AACtC,iBAAK3D,WAAL,GAAmB0D,MAAME,UAAN,GAAmBC,WAAtC;AACD,WAFD,MAEO;AACL,iBAAK7D,WAAL,GAAmBjD,GAAGO,EAAH,CAAMC,IAAN,CAAW0C,QAA9B;AACD;AACF;AACF,OAhEH;;AAkEE;;;;AAIA6D,wBAAkB,0BAAUC,KAAV,EAAiB;AACjC,YAAIC,OAAO,KAAKC,YAAL,EAAX;AACA,aAAKC,UAAL,CAAgBH,KAAhB,EAAuBC,IAAvB;AACA,eAAOA,IAAP;AACD,OA1EH;;AA4EE;;;;AAIAC,oBAAc,wBAAY;AACxB,YAAI3E,WAAW,KAAK6E,WAAL,EAAf;AACA,YAAIH,IAAJ;AACA,YAAI1E,YAAYA,SAASqE,cAAT,CAAwB,YAAxB,CAAhB,EAAuD;AACrDK,iBAAO1E,SAASsE,UAAT,EAAP;AACD,SAFD,MAEO;AACLI,iBAAO,IAAK,KAAKhE,WAAV,EAAP;AACD;AACD,YAAIV,YAAYA,SAASqE,cAAT,CAAwB,eAAxB,CAAhB,EAA0D;AACxDrE,mBAAS8E,aAAT,CAAuBJ,IAAvB;AACD,SAFD,MAEO;AACL,cAAKA,gBAAgBjH,GAAGO,EAAH,CAAMC,IAAN,CAAW0C,QAAhC,EAA0C;AACxC+D,iBAAKK,OAAL,CAAa,IAAb;AACD;AACF;AACD,eAAOL,IAAP;AACD,OAhGH;;AAkGE;;;AAGAE,kBAAY,oBAAUH,KAAV,EAAiBC,IAAjB,EAAuB;AACjC,YAAI1E,WAAW,KAAK6E,WAAL,EAAf;AACA,YAAI7E,YAAYA,SAASgF,QAAT,IAAqB,IAArC,EAA2C;AACzChF,mBAASgF,QAAT,CAAkB,IAAlB,EAAwBP,KAAxB,EAA+BC,IAA/B;AACD,SAFD,MAEO;AACL,eAAKO,qBAAL,CAA2BR,KAA3B,EAAkCC,IAAlC;AACD;AACF,OA5GH;;AA8GE;;;;;;;AAOAO,6BAAuB,+BAAUR,KAAV,EAAiBC,IAAjB,EAAuB;AAC5C;AACAA,aAAKQ,QAAL,CAAcT,KAAd;AACAA,cAAM9C,IAAN,CAAW,KAAKwD,YAAL,EAAX,EAAgCT,IAAhC,EAAsC,OAAtC,EAA+C,KAAKU,eAAL,EAA/C;;AAEA;AACA,YAAI,KAAKC,WAAL,MAAsB,IAA1B,EAAgC;AAC9BZ,gBAAM9C,IAAN,CAAW,KAAK0D,WAAL,EAAX,EAA+BX,IAA/B,EAAqC,MAArC,EAA6C,KAAKY,cAAL,EAA7C;AACD;AACF,OA9HH;;AAgIE;AACAC,aAAO,iBACP;AACE;AACA,aAAK5C,eAAL,CAAqB,WAArB,EAAkC6C,eAAlC,GAAoDD,KAApD;AACD,OArIH;;AAuIE;AACAE,gBAAU,oBACV;AACE,YAAIC,QAAQ,KAAK/C,eAAL,CAAqB,WAArB,CAAZ;AACA+C,cAAMF,eAAN,GAAwBD,KAAxB;;AAEA;AACD,OA9IH;;AAgJE;AACAI,eAAS,mBACT;AACE,YAAID,QAAQ,KAAK/C,eAAL,CAAqB,WAArB,CAAZ;AACA+C,cAAMF,eAAN,GAAwBI,IAAxB;AACD,OArJH;;AAuJE;AACA;;;AAGAC,sBAAiB;AACfC,iBAAU;AADK,OA3JnB;;AA+JE;;;;;;AAMA;AACAC,eAAS,mBAAY,CACpB,CAvKH;;AAyKE;;;;;AAKA9D,gBAAU,kBAAUF,CAAV,EACV;AACE,YAAI,KAAKiE,UAAT,EAAqB;AACnB,eAAKA,UAAL,CAAgBC,WAAhB,CAA4B,MAA5B;AACD;AACD,aAAKD,UAAL,GAAkB,IAAlB;AACA,aAAKE,MAAL;AACD,OArLH;;AAuLE;AACAC,mBAAa,qBAAUpE,CAAV,EACb;AACE,YAAIqE,MAAMrE,EAAEsE,gBAAF,EAAV;AACA,YAAIC,QAAJ,EAAcC,KAAd;AACA,YAAIC,OAAO,KAAK7D,eAAL,CAAqB,OAArB,CAAX;AACA,YAAI8D,YAAY,KAAK9D,eAAL,CAAqB,WAArB,CAAhB;AACA,YAAIyD,QAAQ,MAAR,IAAkB,CAACI,KAAKE,SAAL,EAAvB,EACA;AACE,eAAKC,IAAL;AACA5E,YAAE6E,eAAF;AACA7E,YAAEC,IAAF;AACD,SALD,MAKO,IAAIoE,QAAQ,WAAR,IAAuBA,QAAQ,QAAnC,EAA6C;AAClD,cAAIhC,QAAQqC,UAAUI,QAAV,EAAZ;AACAP,qBAAW,KAAKQ,YAAL,EAAX;AACAP,kBAAQD,SAASS,OAAT,CAAiBN,SAAjB,CAAR;AACA,cAAIrC,UAAU,IAAV,IAAkBA,UAAU,EAAV,IAAgB,CAAC,KAAK4B,UAA5C,EAAwD;AACtD,gBAAII,QAAQ,QAAR,IAAoBG,QAASD,SAASU,MAAT,GAAkB,CAAnD,EACA;AACE,mBAAKhB,UAAL,GAAkBM,SAASC,QAAQ,CAAjB,CAAlB;AACA,mBAAKP,UAAL,CAAgBvC,QAAhB,CAAyB,MAAzB;AACA,mBAAK8B,KAAL;AACD,aALD,MAKO,IAAIa,QAAQ,WAAR,IAAuBG,QAAQ,CAAnC,EACP;AACE,mBAAKP,UAAL,GAAkBM,SAASC,QAAQ,CAAjB,CAAlB;AACA,mBAAKP,UAAL,CAAgBvC,QAAhB,CAAyB,MAAzB;AACA,mBAAK8B,KAAL;AACD;AAEF,WAbD,MAaO,IAAI,KAAKS,UAAT,EAAqB;AAC1B,iBAAKiB,aAAL,CAAmB,KAAKjB,UAAxB;AACA,iBAAKA,UAAL,GAAkB,IAAlB;AACA,iBAAKP,QAAL;AACA1D,cAAEC,IAAF;AACD;AACF,SAvBM,MAuBA,IAAIoE,QAAQ,MAAR,IAAkBA,QAAQ,OAA9B,EAAwC;AAC7C,cAAIc,QAAQT,UAAUU,qBAAV,EAAZ;AACA,cAAIH,SAASP,UAAUW,sBAAV,EAAb;AACAd,qBAAW,KAAKQ,YAAL,EAAX;AACA,cAAIO,aAAaf,SAASU,MAA1B;AACA,cAAIM,OAAO,KAAKtB,UAAL,GAAkB,KAAKA,UAAvB,GAAoCS,SAA/C;AACAF,kBAAQD,SAASS,OAAT,CAAiBO,IAAjB,CAAR;AACA,cAAIA,SAASb,SAAb,EAAwB;AACtB,gBAAIL,QAAQ,MAAZ,EAAmBG,SAAS,CAAT,CAAnB,KACMA,SAAS,CAAT;AAEP;AACD,cAAIH,QAAQ,MAAR,IAAkBG,SAAS,CAA3B,IAAgCW,UAAU,CAA1C,IAA+CF,WAAW,CAA9D,EAAiE;AAC/D,iBAAKO,UAAL,CAAgBd,SAAhB,EAA2BH,SAASC,KAAT,CAA3B;AACD,WAFD,MAEO,IAAIH,QAAQ,OAAR,IAAmBG,QAAQc,UAA3B,IAAyCH,UAAUT,UAAUI,QAAV,GAAqBG,MAA5E,EAAoF;AACzF,iBAAKQ,SAAL,CAAef,SAAf,EAA0BH,SAASC,KAAT,CAA1B;AACD;;AAED,cAAI,KAAKP,UAAT,EAAqB;AACnB,iBAAKA,UAAL,CAAgBC,WAAhB,CAA4B,MAA5B;AACD;AACD,eAAKD,UAAL,GAAkB,IAAlB;;AAEA;AACA;AACAvI,aAAGgK,IAAH,CAAQC,YAAR,CAAqBC,WAArB,GAAmCT,KAAnC,CAAyC,YAAY;AACnD,iBAAKzB,QAAL;AACD,WAFD,EAEG,IAFH,EAES,IAFT,EAEe,IAFf,EAEqB,EAFrB;AAGD,SA5BM,MA4BA,IAAIW,QAAQ,OAAR,IAAmBA,QAAQ,OAA/B,EAAwC;AAC7C,cAAI/F,OAAOoG,UAAUI,QAAV,GAAqBe,IAArB,EAAX;AACA,cAAI,KAAKC,iBAAL,IAA0B,KAAKlF,eAAL,CAAqB,OAArB,EAA8B+D,SAA9B,EAA9B,EACA;AACE,iBAAKoB,WAAL,CAAiB,KAAKD,iBAAtB;AACA,iBAAKA,iBAAL,GAAyB,IAAzB;AACA,iBAAK3B,MAAL;AACD,WALD,MAKO,IAAIE,QAAQ,OAAZ,EAAqB;AAC1BK,sBAAUsB,QAAV,CAAmB1H,OAAO,GAA1B;AACA0B,cAAEC,IAAF;AACA;AACD,WAJM,MAIA,IAAI,KAAKW,eAAL,CAAqB,MAArB,EAA6BqF,WAA7B,GAA2ChB,MAA3C,KAAsD,CAAtD,IAA2DP,UAAUI,QAAV,OAAwB,EAAvF,EAA0F;AAC/F;AACA,iBAAKiB,WAAL,CAAiB,KAAKnF,eAAL,CAAqB,MAArB,EAA6BqF,WAA7B,GAA2C,CAA3C,CAAjB;AACAvB,sBAAUsB,QAAV,CAAmB,EAAnB;AACA,iBAAKrE,KAAL;AACD,WALM,MAKA,IAAKrD,SAAS,EAAd,EAAkB;AACvB;AACAiH,mBAAO,EAAP;AACAA,iBAAK,KAAKnC,YAAL,EAAL,IAA4B9E,IAA5B;AACA,iBAAK4H,UAAL,CAAgBX,IAAhB;AACAb,sBAAUsB,QAAV,CAAmB,EAAnB;AACA,iBAAKG,aAAL,CAAmB,qBAAnB,EAA0C7H,IAA1C;AACD,WAPM,MAOA,IAAI,KAAK8H,YAAL,GAAoBnB,MAAxB,EAA+B;AACpC,iBAAKkB,aAAL,CAAmB,qBAAnB,EAA0C,EAA1C;AACD;AACF,SA1BM,MA0BA,IAAI9B,QAAQ,QAAZ,EAAsB;AAC3B,eAAK1C,KAAL;AACD,SAFM,MAEA,IAAI0C,QAAQ,MAAR,IAAkBA,QAAQ,OAA9B,EAAuC;AAC5C,eAAKzD,eAAL,CAAqB,MAArB,EAA6ByF,cAA7B,CAA4CrG,CAA5C;AACD;AACF,OArRH;;AAuRE;;;;;AAKAO,sBAAgB,wBAAUP,CAAV,EAAa;AAC3B,YAAIsG,MAAMtG,EAAEuG,OAAF,EAAV;;AAEA,YAAIC,QAAQ9K,GAAGgK,IAAH,CAAQC,YAAR,CAAqBC,WAArB,EAAZ;;AAEA;AACA,YAAI,KAAKa,SAAL,KAAmB,IAAvB,EAA6B;AAC3B;AACAD,gBAAMvG,IAAN,CAAW,KAAKwG,SAAhB;AACA,eAAKA,SAAL,GAAiB,IAAjB;AACD;;AAED,YAAIH,OAAO,IAAP,IAAgBA,OAAO,IAAP,IAAeA,IAAIrB,MAAJ,GAAa,KAAKyB,WAAL,EAAhD,EAAqE;AACnE,eAAKC,OAAL,CAAaL,GAAb;AACA,eAAK3E,KAAL;AACA,iBAAO,KAAP;AACD;;AAED;AACA,aAAK8E,SAAL,GAAiBD,MAAMrB,KAAN,CAAY,YAAY;AACvC,eAAKyB,MAAL,CAAYN,GAAZ;AACA,eAAKG,SAAL,GAAiB,IAAjB;AACD,SAHgB,EAGd,CAHc,EAGX,IAHW,EAGL,IAHK,EAGC,KAAKI,cAAL,EAHD,CAAjB;AAID,OAnTH;;AAqTE;AACAC,0BAAoB,8BACpB;AACE;AACA,YAAI,KAAKhB,iBAAT,EACA;AACE,eAAKC,WAAL,CAAiB,KAAKD,iBAAtB;AACA,eAAKA,iBAAL,GAAyB,IAAzB;AACD;AACF,OA9TH;;AAgUE;AACAiB,8BAAwB,gCAAU/G,CAAV,EACxB;AACE,YAAIgH,UAAUhH,EAAEuG,OAAF,EAAd;AACA,YAAIS,QAAQ/B,MAAR,GAAiB,CAArB,EACA;AACE;AACA;AACA,cAAIR,OAAO,KAAK7D,eAAL,CAAqB,MAArB,CAAX;AACA,cAAIkB,QAAQ,KAAKlB,eAAL,CAAqB,OAArB,CAAZ;AACA,cAAIqG,UAAUxC,KAAKyC,mBAAL,EAAd;AACA,cAAIpF,MAAM6C,SAAN,OAAsBsC,YAAY,OAAZ,IAAuBA,YAAY,KAAzD,CAAJ,EAAqE;AACnE,iBAAKnB,iBAAL,GAAyBkB,QAAQ,CAAR,CAAzB;AACD,WAFD,MAEO;AACL,iBAAKlB,iBAAL,GAAyB,IAAzB;AACD;AACF;AACF,OAjVH;;AAmVE;AACA3D,gCAA0B,oCAAY;AACpC,aAAKuB,QAAL;AACD,OAtVH;;AAwVE;;;;;;AAMA;;;;;AAKAkD,cAAQ,gBAAUN,GAAV,EACR;AACE,aAAK1F,eAAL,CAAqB,MAArB,EAA6BuG,SAA7B;AACA,aAAKzG,MAAL,CAAY0G,QAAZ,CAAqB,KAAKC,gBAAL,EAArB;AACA,aAAKzG,eAAL,CAAqB,MAArB,EAA6BrB,GAA7B,CAAiC,KAAKmB,MAAtC;AACA,aAAKkE,IAAL;AACA,aAAKnE,OAAL,GAAe6F,GAAf;AACA,aAAKH,aAAL,CAAmB,UAAnB,EAA+BG,GAA/B;AACD,OA3WH;;AA6WE;;;;;;;;;AASAgB,oBAAc,sBAAUhB,GAAV,EAAef,IAAf,EAAqB;AACjC,aAAK1G,KAAL,CAAWU,GAAX,CAAe+G,GAAf,EAAoB5K,GAAG6J,IAAH,CAAQgC,OAAR,CAAgBC,IAAhB,CAAqBC,WAArB,CAAiClC,IAAjC,CAApB;AACA,YAAImC,SAAS,KAAK7I,KAAL,CAAW8I,GAAX,CAAerB,GAAf,CAAb;AACA,YAAI,CAAEoB,MAAN,EAAe;AACf,YAAIjD,OAAO,KAAK7D,eAAL,CAAqB,MAArB,CAAX;AACA6D,aAAK0C,SAAL;AACA,YAAIO,OAAOE,SAAP,OAAuB,CAA3B,EAA8B;AAC5B,eAAKjB,OAAL,CAAaL,GAAb;AACA,cAAI,KAAKuB,oBAAL,EAAJ,EAAiC;AAC/B,iBAAKlG,KAAL;AACD;AACD;AACD,SAND,MAMO;AACL,eAAKmG,SAAL;AACD;AACD,aAAKC,eAAL,CAAqB;AACnBC,qBAAW,UAAU3F,KAAV,EAAiB;AAC1B,mBAAO,KAAK4F,SAAL,CAAe5F,KAAf,EAAsBiE,GAAtB,CAAP;AACD,WAFU,CAET1G,IAFS,CAEJ,IAFI;AADQ,SAArB;;AAMA,aAAK,IAAIsI,IAAI,CAAb,EAAgBA,IAAIR,OAAOE,SAAP,EAApB,EAAwCM,GAAxC,EAA6C;AAC3C,cAAI,CAAC,KAAKC,aAAL,EAAD,IAA0B,KAAKA,aAAL,OAAyB,IAAzB,IAAiC,CAAC,KAAKC,WAAL,CAAiBV,OAAOW,OAAP,CAAeH,CAAf,CAAjB,CAAhE,EAAsG;AACpG,gBAAIvF,OAAO,KAAKF,gBAAL,CAAsBiF,OAAOW,OAAP,CAAeH,CAAf,CAAtB,EAAyCA,CAAzC,CAAX;AACA,iBAAKtH,eAAL,CAAqB,MAArB,EAA6BrB,GAA7B,CAAiCoD,IAAjC;AACD;AACF;AACF,OAjZH;;AAmZE;;;;;;;AAOA2F,gBAAU,kBAAU/C,IAAV,EAAgBgD,QAAhB,EAA0B;AAClC,YAAI7F,QAAQhH,GAAG6J,IAAH,CAAQgC,OAAR,CAAgBC,IAAhB,CAAqBC,WAArB,CAAiClC,IAAjC,CAAZ;AACA,YAAI5C,OAAO,KAAKF,gBAAL,CAAsBC,KAAtB,CAAX;AACA,YAAI+B,OAAO,KAAK7D,eAAL,CAAqB,MAArB,CAAX;AACA,YAAI,CAAC,KAAKuH,aAAL,EAAD,IAA0B,KAAKA,aAAL,OAAyB,IAAzB,IAAiC,CAAC,KAAKC,WAAL,CAAiB1F,KAAjB,CAAhE,EAA0F;AACxF,cAAI+B,KAAK+D,WAAL,MAAsB/D,KAAKwB,WAAL,GAAmB,CAAnB,MAA0B,KAAKvF,MAAzD,EAAiE;AAC/D+D,iBAAKgE,MAAL,CAAY,KAAK/H,MAAjB;AACD;AACD+D,eAAKlF,GAAL,CAASoD,IAAT;AACD;AACD,YAAI4F,YAAY,CAAC,KAAKH,WAAL,CAAiB1F,KAAjB,CAAjB,EAA0C;AACxC,eAAKqD,WAAL,CAAiBpD,IAAjB;AACD;AACF,OAvaH;;AAyaE;;;;;AAKAuD,kBAAY,oBAAUX,IAAV,EAAgB;AAC1B,YAAI7C,QAAQhH,GAAG6J,IAAH,CAAQgC,OAAR,CAAgBC,IAAhB,CAAqBC,WAArB,CAAiClC,IAAjC,CAAZ;AACA,YAAIlG,QAAQqD,MAAMiF,GAAN,CAAU,KAAKvE,YAAL,EAAV,CAAZ;AACA,YAAIT,IAAJ;AACA,YAAI+F,gBAAgB,KAApB;AACA,aAAKtC,YAAL,GAAoBuC,IAApB,CAAyB,UAAUhG,IAAV,EAAgB;AACvC,cAAKA,gBAAgB,KAAKhE,WAArB,IAAoCgE,KAAKiG,QAAL,OAAoBvJ,KAA7D,EAAoE;AAClEqJ,4BAAgB,IAAhB;AACA,mBAAO,IAAP;AACD;AACF,SALD,EAKE,IALF;AAMA,YAAIA,aAAJ,EAAmB;AACjB;AACD;AACD,aAAK9H,eAAL,CAAqB,MAArB,EAA6BqF,WAA7B,GAA2C0C,IAA3C,CAAgD,UAAUE,KAAV,EAAiB;AAC/D,cAAIA,MAAMD,QAAN,OAAqBvJ,KAAzB,EAAgC;AAC9BsD,mBAAOkG,KAAP;AACA,mBAAO,IAAP;AACD;AACF,SALD,EAKG,IALH;AAMA,YAAI,CAAClG,IAAL,EAAW;AACTA,iBAAO,KAAKF,gBAAL,CAAsBC,KAAtB,CAAP;AACD;AACD,aAAKqD,WAAL,CAAiBpD,IAAjB;AACD,OAtcH;;AAwcE;;;;AAIAmG,oBAAc,sBAAUvD,IAAV,EAAgB;AAC5B,YAAI7C,QAAQhH,GAAG6J,IAAH,CAAQgC,OAAR,CAAgBC,IAAhB,CAAqBC,WAArB,CAAiClC,IAAjC,CAAZ;AACA,YAAIlG,QAAQqD,MAAMiF,GAAN,CAAU,KAAKvE,YAAL,EAAV,CAAZ;AACA,aAAKgD,YAAL,GAAoB2C,OAApB,CAA4B,UAAUpG,IAAV,EAAgB;AAC1C,cAAItD,SAASsD,KAAKiG,QAAL,OAAoBvJ,KAAjC,EAAwC;AACtC,iBAAK6F,aAAL,CAAmBvC,IAAnB;AACA,mBAAO,IAAP;AACD;AACF,SALD,EAKG,IALH;AAMD,OArdH;;AAudE;;;;;;AAMAyF,mBAAa,qBAAU1F,KAAV,EACb;AACE,YAAIsG,YAAY,KAAKC,iBAAL,EAAhB;AACA,YAAItG,OAAO,IAAX;AACA,aAAK,IAAIuF,IAAI,CAAb,EAAgBA,IAAIc,UAAUpB,SAAV,EAApB,EAA2CM,GAA3C,EACA;AACEvF,iBAAOqG,UAAUX,OAAV,CAAkBH,CAAlB,CAAP;AACA,cAAIvF,QAAQD,KAAR,IAAiBC,KAAKgF,GAAL,CAAS,KAAKvE,YAAL,EAAT,MAAkCV,MAAMiF,GAAN,CAAU,KAAKvE,YAAL,EAAV,CAAvD,EAAuF;AACrF,mBAAO,IAAP;AACD;AACF;AACD,eAAO,KAAP;AACD,OAzeH;;AA2eE;;;;;AAKA8B,qBAAe,uBAAUvC,IAAV,EAAgB;AAC7B,YAAIA,QAAQA,KAAKH,WAAL,KAAqB,KAAK7D,WAAtC,EAAmD;AACjD,eAAKuK,mBAAL,CAAyBvG,IAAzB;AACA,eAAKwD,aAAL,CAAmB,YAAnB,EAAiCxD,IAAjC;AACAA,eAAKwG,OAAL;AACD;AACF,OAtfH;;AAwfE;AACAC,4BAAsB,gCAAY;AAChC,eAAO,IAAP;AACD,OA3fH;;AA6fE;;;AAGAC,aAAO,iBAAY;AACjB,aAAKjD,YAAL,GAAoB2C,OAApB,CAA4B,UAAUpG,IAAV,EAAgB;AAC1C,cAAIA,gBAAgB,KAAKhE,WAAzB,EAAsC;AACpC,iBAAKuK,mBAAL,CAAyBvG,IAAzB;AACAA,iBAAKwG,OAAL;AACD;AACF,SALD,EAKG,IALH;AAMA,aAAKlD,WAAL,GAAmB8C,OAAnB,CAA2B,UAAUpG,IAAV,EAAgB;AACzC,cAAIA,gBAAgB,KAAKhE,WAAzB,EAAsC;AACpC,iBAAK8J,MAAL,CAAY9F,IAAZ;AACAA,iBAAKwG,OAAL;AACD;AACF,SALD,EAKG,IALH;AAMA,aAAKvI,eAAL,CAAqB,WAArB,EAAkCoF,QAAlC,CAA2C,EAA3C;AACA,aAAKpF,eAAL,CAAqB,MAArB,EAA6BuG,SAA7B;AACA,aAAKvG,eAAL,CAAqB,MAArB,EAA6BrB,GAA7B,CAAiC,KAAKmB,MAAtC;AACD,OAhhBH;;AAkhBE;;;;;AAKAqF,mBAAa,qBAAUuD,GAAV,EAAe;AAC1B,YAAIA,OAAOA,IAAI9G,WAAJ,KAAoB,KAAK7D,WAApC,EAAiD;AAC/C,cAAIgE,OAAO,KAAKwF,aAAL,KAAuBmB,GAAvB,GAA6B,KAAK1G,YAAL,EAAxC;AACAD,eAAKjD,aAAL,CAAmB,WAAnB;AACA,cAAI4J,IAAIC,QAAJ,EAAJ,EAAoB;AAClB5G,iBAAKyE,QAAL,CAAckC,IAAIC,QAAJ,GAAe5B,GAAf,CAAmB,KAAKvE,YAAL,EAAnB,CAAd;AACAT,iBAAKQ,QAAL,CAAcmG,IAAIC,QAAJ,EAAd;AACD,WAHD,MAGO;AACL;AACA,iBAAKC,IAAL,CAAU,qBAAV;AACA;AACD;AACD;AACA,cAAI,KAAKC,kBAAL,OAA8B,KAAlC,EAAwC;AACtC9G,iBAAK+G,OAAL,CAAa,OAAb;AACD,WAFD,MAEO;AACL/G,iBAAKgH,eAAL,CAAqB,OAArB;AACAhH,iBAAK/B,eAAL,CAAqB,MAArB,EAA6BgJ,YAA7B,CAA0C,KAA1C;AACA;AACAjH,iBAAK/B,eAAL,CAAqB,MAArB,EAA6Bf,WAA7B,CAAyC,OAAzC,EAAkD,UAAUG,CAAV,EAAa;AAC7D,kBAAI,KAAKiE,UAAT,EAAqB;AACnB,qBAAKA,UAAL,CAAgBC,WAAhB,CAA4B,MAA5B;AACA,qBAAKD,UAAL,GAAkB,IAAlB;AACD;AACD,mBAAKiB,aAAL,CAAmBvC,IAAnB;AACA3C,gBAAEC,IAAF;AACA,mBAAKyD,QAAL;AACD,aARD,EAQG,IARH;AASA;AACAf,iBAAK/B,eAAL,CAAqB,MAArB,EAA6Bf,WAA7B,CAAyC,aAAzC,EAAwD,UAAUG,CAAV,EAAa;AACnE2C,mBAAKjB,QAAL,CAAc,OAAd;AACD,aAFD;AAGAiB,iBAAK/B,eAAL,CAAqB,MAArB,EAA6Bf,WAA7B,CAAyC,YAAzC,EAAuD,UAAUG,CAAV,EAAa;AAClE2C,mBAAKuB,WAAL,CAAiB,OAAjB;AACD,aAFD;AAGA;AACA;AACAvB,iBAAK9C,WAAL,CAAiB,aAAjB,EAAgC,UAAUG,CAAV,EAAa;AAC3C,mBAAK6J,aAAL,GAAqBlH,KAAK/B,eAAL,CAAqB,MAArB,EAA6BkJ,SAA7B,EAArB;AACAnH,mBAAK/B,eAAL,CAAqB,MAArB,EAA6BmJ,SAA7B,CAAuC,oCAAvC;AACD,aAHD;AAIApH,iBAAK9C,WAAL,CAAiB,YAAjB,EAA+B,UAAUG,CAAV,EAAa;AAC1C,kBAAI,KAAK6J,aAAT,EAAyB;AACvBlH,qBAAK/B,eAAL,CAAqB,MAArB,EAA6BmJ,SAA7B,CAAuC,KAAKF,aAA5C;AACD;AACF,aAJD;AAKD;AACD;AACAlH,eAAK9C,WAAL,CAAiB,OAAjB,EAA0B,UAAUG,CAAV,EAAa;AACrC2C,iBAAKjB,QAAL,CAAc,MAAd;AACA,gBAAI,KAAKuC,UAAL,IAAmB,IAAnB,IAA2B,KAAKA,UAAL,KAAoBtB,IAAnD,EAAyD;AACvD,mBAAKsB,UAAL,CAAgBC,WAAhB,CAA4B,MAA5B;AACD;AACD,iBAAKD,UAAL,GAAkBtB,IAAlB;AACA3C,cAAEC,IAAF;AACD,WAPD,EAOG,IAPH;AAQA;AACA0C,eAAK9C,WAAL,CAAiB,UAAjB,EAA6B,UAAUG,CAAV,EAAa;AACxC,gBAAI,KAAKiE,UAAT,EAAqB;AACnB,mBAAKA,UAAL,CAAgBC,WAAhB,CAA4B,MAA5B;AACA,mBAAKD,UAAL,GAAkB,IAAlB;AACD;AACD,gBAAIS,YAAY,KAAK9D,eAAL,CAAqB,WAArB,CAAhB;AACA,iBAAK4E,UAAL,CAAgBd,SAAhB,EAA0B/B,IAA1B;AACA,gBAAItD,QAAQsD,KAAKiG,QAAL,EAAZ;AACA,iBAAK1D,aAAL,CAAmBvC,IAAnB;AACA+B,sBAAUsB,QAAV,CAAmB3G,KAAnB;AACAqF,sBAAUsF,aAAV;AACA,iBAAKtG,QAAL;AACA,iBAAKkD,MAAL,CAAYvH,KAAZ;AACD,WAbD,EAaG,IAbH;AAcA;AACA,cAAI,KAAK4K,QAAL,OAAoB,UAAxB,EAAoC;AAClCtH,iBAAK/B,eAAL,CAAqB,OAArB,EAA8Bd,QAA9B,CAAuC,KAAKoK,QAAL,KAAkB,EAAzD;AACD;AACD;AACA,eAAK1E,UAAL,CAAgB7C,IAAhB,EAAsB,KAAK/B,eAAL,CAAqB,WAArB,CAAtB;AACA,eAAKuJ,cAAL,CAAoBxH,IAApB;AACA,eAAKwD,aAAL,CAAmB,SAAnB,EAA8BxD,IAA9B;AACA,eAAK/B,eAAL,CAAqB,WAArB,EAAkCoF,QAAlC,CAA2C,EAA3C;;AAEA;AACA,cAAI,KAAKpF,eAAL,CAAqB,MAArB,EAA6BqF,WAA7B,MAA8C,KAAKrF,eAAL,CAAqB,MAArB,EAA6BqF,WAA7B,GAA2ChB,MAA3C,KAAsD,CAAxG,EAA2G;AACzG,iBAAKpE,WAAL,CAAiB,KAAKC,aAAL,EAAjB;AACA,iBAAKF,eAAL,CAAqB,MAArB,EAA6BrB,GAA7B,CAAiC,KAAKmB,MAAtC;AACD;AACF;AACF,OA9mBH;;AAgnBE;;;;;;;AAOAuH,iBAAW,mBAAU5F,KAAV,EAAiB+H,KAAjB,EAAwB;AACjC;AACA,YAAIC,aAAa,KAAKC,YAAL,MACZ,KAAKA,YAAL,GAAoBC,IAApB,CAAyB,UAASC,CAAT,EAAW;AAAC,iBAAOJ,MAAMpF,OAAN,CAAcwF,CAAd,IAAiB,CAAC,CAAzB;AAA2B,SAAhE,MAAsEC,SAD3E;AAEA,YAAKJ,UAAL,EAAiB,OAAOhI,KAAP;AACjB;AACA,YAAG;AACD,iBAAOA,MAAMqI,OAAN,CAAc,IAAIC,MAAJ,CAAW,4BAA4BP,KAA5B,GAAoC,yBAA/C,EAA0E,IAA1E,CAAd,EAA+F,WAA/F,CAAP;AACD,SAFD,CAEE,OAAOpK,CAAP,EAAU;AACV,iBAAOqC,KAAP;AACD;AACF,OAloBH;;AAooBE;;;;AAIAuI,sBAAiB,0BAAU;AACzB,YAAIC,SAAS,EAAb;AACA,aAAK5E,WAAL,GAAmB8C,OAAnB,CAA4B,UAASF,KAAT,EAAe;AACzC,cAAI,OAAOA,MAAMU,QAAb,KAA0B,UAA9B,EAA0C;AACxCsB,mBAAOC,IAAP,CAAYjC,MAAMU,QAAN,EAAZ;AACD;AACF,SAJD;AAKA,eAAOsB,MAAP;AACD,OAhpBH;;AAkpBE;;;;AAIAE,sBAAiB,0BAAU;AACzB,YAAIC,SAAS,EAAb;AACA,aAAK/E,WAAL,GAAmB8C,OAAnB,CAA4B,UAASF,KAAT,EAAe;AACzC,cAAI,OAAOA,MAAMU,QAAb,KAA0B,UAA9B,EAA0C;AAAE;AAC1CyB,mBAAOF,IAAP,CAAYjC,MAAMD,QAAN,EAAZ;AACD;AACF,SAJD;AAKA,eAAOoC,MAAP;AACD,OA9pBH;;AAgqBE;;;;;;AAMAC,sBAAiB,wBAAUC,cAAV,EAA0B;AACzC,YAAIA,mBAAmBT,SAAvB,EAAiC;AAC/BS,2BAAiB,GAAjB;AACD;AACD,YAAIC,UAAU,EAAd;AACA,aAAKlF,WAAL,GAAmB8C,OAAnB,CAA4B,UAASF,KAAT,EAAe;AACzC,cAAIA,UAAU,KAAKnI,MAAnB,EAA2B;AAC3B,cAAI,OAAOmI,MAAMU,QAAb,KAA0B,UAA9B,EAA0C;AAAE;AAC1C4B,oBAAQL,IAAR,CAAajC,MAAMD,QAAN,EAAb;AACD,WAFD,MAEO,IAAI,OAAOC,MAAM/D,QAAb,KAA0B,UAA1B,IAAwC+D,MAAM/D,QAAN,EAA5C,EAA+D;AAAE;AACtEqG,oBAAQL,IAAR,CAAajC,MAAM/D,QAAN,EAAb;AACD;AACF,SAPD;AAQA,eAAOqG,QAAQC,IAAR,CAAaF,cAAb,EAA6BrF,IAA7B,EAAP;AACD,OAprBH;;AAsrBE;;;;AAIAwF,wBAAkB,4BAAU;AAC1B,eAAO,KAAKtG,YAAL,GAAoBC,OAApB,CAA4B,KAAKpE,eAAL,CAAqB,WAArB,CAA5B,CAAP;AACD;;AA5rBH,KA7RF;;AA89BE;;;;;AAKA0K,cAAU,oBAAY;AACpB,WAAKC,eAAL,CAAqB,QAArB,EAA+B,OAA/B;AACD;AAr+BH,GADA,C;AAtBAzM,aAAW0M,KAAX,CAAiB3P,aAAjB,GAAiCA,aAAjC",
  "file": "Token.js",
  "sourcesContent": [
    "/* ************************************************************************\n\n   Copyright:\n     2010 Guilherme R. Aiolfi\n\n   License:\n     LGPL: http://www.gnu.org/licenses/lgpl.html\n     EPL: http://www.eclipse.org/org/documents/epl-v10.php\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Guilherme R. Aiolfi (guilhermeaiolfi)\n     * Christian Boulanger (cboulanger)\n     * Tobias Bräutigam (peuter)\n\n************************************************************************ */\n\n/**\n * A widget implementing the token field concept known from Mac OS X\n * @see http://developer.apple.com/mac/library/documentation/Cocoa/Conceptual/TokenField_Guide/Introduction/Introduction.html\n * @asset(tokenfield/*)\n */\nqx.Class.define('tokenfield.Token',\n{\n  extend : qx.ui.form.AbstractSelectBox,\n  implement : [qx.ui.core.IMultiSelection, qx.ui.form.IModelSelection],\n  include : [qx.ui.core.MMultiSelectionHandling, qx.ui.form.MModelSelection],\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n  events :\n  {\n    /**\n     * This event is fired after a list item was added to the list. The\n     * {@link qx.event.type.Data#getData} method of the event returns the\n     * added item.\n     */\n    addItem : 'qx.event.type.Data',\n\n    /**\n     * This event is fired after a list item has been removed from the list.\n     * The {@link qx.event.type.Data#getData} method of the event returns the\n     * removed item.\n     */\n    removeItem : 'qx.event.type.Data',\n\n    /**\n     * This event is fired when the widget needs external data. The data dispatched\n     * with the event is the string fragment to use to find matching items\n     * as the data. The event listener must then load the data from whereever\n     * it may come and call populateList() with the string fragment and the\n     * received data.\n     */\n    loadData : 'qx.event.type.Data',\n  \n    /**\n     * This event is fired when the enter key is pressed in the textfield with\n     * tokens or text input present. This can be useful when used as a search box. The event data\n     * is the content of the textfield\n     */\n    enterKeyWithContent :'qx.event.type.Data'\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n  properties :\n  {\n    // /**\n    //  * The orientation of the widget\n    //  * not implemented\n    //  */\n    // orientation :\n    // {\n    //   check : ['horizontal', 'vertical'],\n    //   init : 'vertical',\n    //   apply : '_applyOrientation'\n    // },\n\n    /**\n     * The appearance of the widget\n     */\n    appearance :\n    {\n      refine : true,\n      init : 'token'\n    },\n\n    /**\n     * The message prompting the user to type in text\n     */\n    typeInText :\n    {\n      check : 'String',\n      nullable : true,\n      event : 'changeTypeInText',\n      init : 'Type in a search term'\n    },\n\n    /**\n     * The current hint message\n     */\n    hintText :\n    {\n      check : 'String',\n      nullable : true,\n      event : 'changeHintText',\n      init : null\n    },\n\n    /**\n     * The message indicating that there were no results\n     */\n    noResultsText :\n    {\n      check : 'String',\n      nullable : true,\n      init : 'No results'\n    },\n\n    /**\n     * The message indicating that the application is loading data\n     * in response to the user's input\n     */\n    searchingText :\n    {\n      check : 'String',\n      nullable : true,\n      init : 'Searching...'\n    },\n\n    /**\n     * The delay in milliseconds before a request is sent\n     */\n    searchDelay : {\n      init : 300\n    },\n\n    /**\n     * The minimum number of characters before a request is sent\n     */\n    minChars : {\n      init : 2\n    },\n\n    /**\n     * The maximum number of tokens that can be entered\n     */\n    tokenLimit :\n    {\n      init : null,\n      nullable : true\n    },\n\n    /**\n     * If true, an item on the suggested list of items can be selected only\n     * once (and is then removed from the list). If false, the item can be\n     * selected multiple times (default).\n     */\n    selectOnce :\n    {\n      init : false,\n      check : 'Boolean'\n    },\n\n    /**\n     * The path to the label in the model\n     */\n    labelPath : {\n      init : 'label',\n      event: 'changeLabelPath'\n    },\n\n    /**\n     * The style of the token. if 'facebook', then the labels are as wide as the containing text\n     * (best for horizontal TokenFields). If any other value, the labels span the width of the container\n     * widget (best for vertical TokenFields).\n     */\n    style : {\n      init : 'facebook'\n    },\n\n    delegate: {\n      check: 'Map',\n      init: null,\n      apply: '_applyDelegate'\n    },\n\n    /**\n     * A map containing the options for the label binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    labelOptions: {\n      nullable: true\n    },\n\n    /**\n     * A map containing the options for the icon binding. The possible keys\n     * can be found in the {@link qx.data.SingleValueBinding} documentation.\n     */\n    iconOptions: {\n      nullable: true\n    },\n\n    /**\n     * The path to the label in the model\n     */\n    iconPath: {\n      check: 'String',\n      init: null,\n      event: 'changeIconPath'\n    },\n\n    /**\n     * Contains the textfield content, when there is no token available\n     */\n    text: {\n      check: 'String',\n      init: '',\n      event: 'changeText'\n    },\n\n    /**\n     * Close the popup when there are no results found\n     */\n    closeWhenNoResults: {\n      check: 'Boolean',\n      init: false\n    },\n  \n    /**\n     * Whether the close button should be shown in the token\n     */\n    showCloseButton: {\n      check: 'Boolean',\n      init: true\n    },\n  \n    /**\n     * These wildcards are allowed in matching token values\n     */\n    wildcards:{\n      check: 'Array',\n      init : null\n    }\n  },\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n  construct: function ()\n  {\n    this.base(arguments);\n    this._tokenClass = qx.ui.form.ListItem;\n    this.cache = new tokenfield.Cache();\n    this._setLayout(new qx.ui.layout.Flow());\n    var textField = this._createChildControl('textfield');\n    var label = this._createChildControl('label');\n    this.getApplicationRoot().add(label,\n    {\n      top : -10,\n      left : -1000\n    });\n    label.setAppearance(textField.getAppearance());\n    textField.bind('value', label, 'value');\n    textField.addListener('keypress', function () {\n      //label.setValue(textField.getValue());\n      textField.setWidth(label.getBounds()['width'] + 8);\n    }, this);\n    textField.addListener('pointerdown', function (e) {\n      e.stop();\n    });\n    this.addListener('click', this._onClick);\n\n    // forward the focusin and focusout events to the textfield. The textfield\n    // is not focusable so the events need to be forwarded manually.\n    this.addListener('focusin', function () {\n      textField.fireNonBubblingEvent('focusin', qx.event.type.Focus);\n    }, this);\n    this.addListener('focusout', function () {\n      textField.fireNonBubblingEvent('focusout', qx.event.type.Focus);\n    }, this);\n    textField.setLiveUpdate(true);\n    textField.addListener('input', this._onInputChange, this);\n    textField.setMinWidth(6);\n    this._search = '';\n    this._dummy = new qx.ui.form.ListItem();\n    this._dummy.setEnabled(false);\n    this.bind('hintText', this._dummy, 'label');\n    this.getChildControl('list').add(this._dummy);\n    this.addListener('appear', function (){\n        this.setHintText(this.getTypeInText());\n    },this);\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  members :\n  {\n    SELECTION_MANAGER : tokenfield.SelectionManager,\n    _search: null,\n    _tokenClass: null,\n\n    /*\n    ---------------------------------------------------------------------------\n       WIDGET CREATION\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createChildControlImpl: function (id)\n    {\n      var control;\n      switch (id)\n      {\n        case 'label':\n          control = new qx.ui.basic.Label();\n          //control.setWidth(10);\n          control.hide();\n          break;\n        case 'button':\n          return null;\n\n        case 'textfield':\n          control = new qx.ui.form.TextField();\n          control.setFocusable(false);\n          control.addState('inner');\n\n          //control.addListener('changeValue', this._onTextFieldChangeValue, this);\n          control.addListener('blur', this.close, this);\n          this._add(control);\n          break;\n        case 'list':\n          // Get the list from the AbstractSelectBox\n          control = this.base(arguments, id);\n\n          // Change selection mode\n          control.setSelectionMode('single');\n          break;\n        case 'popup':\n          control = new qx.ui.popup.Popup(new qx.ui.layout.VBox);\n          control.setAutoHide(true);\n          control.setKeepActive(true);\n          control.addListener('pointerup', this.close, this);\n          control.add(this.getChildControl('list'));\n          control.addListener('changeVisibility', this._onPopupChangeVisibility, this);\n          break;\n      }\n      return control || this.base(arguments, id);\n    },\n\n    /**\n     * Applies the 'delegate' property\n     */\n    _applyDelegate: function (value) {\n      if (value) {\n        if (value.hasOwnProperty('createItem')) {\n          this._tokenClass = value.createItem().constructor;\n        } else {\n          this._tokenClass = qx.ui.form.ListItem;\n        }\n      }\n    },\n\n    /**\n     * Creates a token widget and binds the model data\n     * @return {qx.ui.core.Widget}\n     */\n    _createBoundItem: function (model) {\n      var item = this.__createItem();\n      this.__bindItem(model, item);\n      return item;\n    },\n\n    /**\n     * Creates a token widget, usually a {qx.ui.form.ListItem}\n     * @return {qx.ui.core.Widget}\n     */\n    __createItem: function () {\n      var delegate = this.getDelegate();\n      var item;\n      if (delegate && delegate.hasOwnProperty('createItem')) {\n        item = delegate.createItem();\n      } else {\n        item = new (this._tokenClass)();\n      }\n      if (delegate && delegate.hasOwnProperty('configureItem')) {\n        delegate.configureItem(item);\n      } else {\n        if ( item instanceof qx.ui.form.ListItem ){\n          item.setRich(true);\n        }\n      }\n      return item;\n    },\n\n    /**\n     * Binds the model data to the token widget \n     */\n    __bindItem: function (model, item) {\n      var delegate = this.getDelegate();\n      if (delegate && delegate.bindItem != null) {\n        delegate.bindItem(this, model, item);\n      } else {\n        this.bindDefaultProperties(model, item);\n      }\n    },\n\n    /**\n     * Helper-Method for binding the default properties (label, icon and model)\n     * from the model to the target widget.\n     *\n     * @param model {qx.core.Object} the model the ListItem should be bound to\n     * @param item {Number} The internally created and used ListItem.\n     */\n    bindDefaultProperties: function (model, item) {\n      // model\n      item.setModel(model);\n      model.bind(this.getLabelPath(), item, 'label', this.getLabelOptions());\n\n      // if the iconPath is set\n      if (this.getIconPath() != null) {\n        model.bind(this.getIconPath(), item, 'icon', this.getIconOptions());\n      }\n    },\n\n    // overridden\n    focus: function ()\n    {\n      this.base(arguments);\n      this.getChildControl('textfield').getFocusElement().focus();\n    },\n\n    // overridden\n    tabFocus: function ()\n    {\n      var field = this.getChildControl('textfield');\n      field.getFocusElement().focus();\n\n      //field.selectAllText();\n    },\n\n    // overridden\n    tabBlur: function ()\n    {\n      var field = this.getChildControl('textfield');\n      field.getFocusElement().blur();\n    },\n\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates : {\n      focused : true\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n       EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _onBlur: function () {\n    },\n\n    /**\n     * Toggles the popup's visibility.\n     *\n     * @param e {qx.event.type.Mouse} Mouse click event\n     */\n    _onClick: function (e)\n    {\n      if (this.__selected) {\n        this.__selected.removeState('head');\n      }\n      this.__selected = null;\n      this.toggle();\n    },\n\n    // overridden\n    _onKeyPress: function (e)\n    {\n      var key = e.getKeyIdentifier();\n      var children, index;\n      var list = this.getChildControl('popup');\n      var textfield = this.getChildControl('textfield');\n      if (key === 'Down' && !list.isVisible())\n      {\n        this.open();\n        e.stopPropagation();\n        e.stop();\n      } else if (key === 'Backspace' || key === 'Delete') {\n        var value = textfield.getValue();\n        children = this._getChildren();\n        index = children.indexOf(textfield);\n        if (value === null || value === '' && !this.__selected) {\n          if (key === 'Delete' && index < (children.length - 1))\n          {\n            this.__selected = children[index + 1];\n            this.__selected.addState('head');\n            this.focus();\n          } else if (key === 'Backspace' && index > 0)\n          {\n            this.__selected = children[index - 1];\n            this.__selected.addState('head');\n            this.focus();\n          }\n\n        } else if (this.__selected) {\n          this._deselectItem(this.__selected);\n          this.__selected = null;\n          this.tabFocus();\n          e.stop();\n        }\n      } else if (key === 'Left' || key === 'Right')  {\n        var start = textfield.getTextSelectionStart();\n        var length = textfield.getTextSelectionLength();\n        children = this._getChildren();\n        var n_children = children.length;\n        var data = this.__selected ? this.__selected : textfield;\n        index = children.indexOf(data);\n        if (data === textfield) {\n          if (key === 'Left')index -= 1;\n           else index += 1;\n\n        }\n        if (key === 'Left' && index >= 0 && start === 0 && length === 0) {\n          this._addBefore(textfield, children[index]);\n        } else if (key === 'Right' && index < n_children && start === textfield.getValue().length) {\n          this._addAfter(textfield, children[index]);\n        }\n\n        if (this.__selected) {\n          this.__selected.removeState('head');\n        }\n        this.__selected = null;\n\n        // I really don't know, but FF needs the timer to be able to set the focus right\n        // when there is a selected item and the key == 'Left'\n        qx.util.TimerManager.getInstance().start(function () {\n          this.tabFocus();\n        }, null, this, null, 20);\n      } else if (key === 'Enter' || key === 'Space') {\n        var text = textfield.getValue().trim();\n        if (this.__preSelectedItem && this.getChildControl('popup').isVisible())\n        {\n          this._selectItem(this.__preSelectedItem);\n          this.__preSelectedItem = null;\n          this.toggle();\n        } else if (key === 'Space') {\n          textfield.setValue(text + ' ');\n          e.stop();\n          return;\n        } else if (this.getChildControl('list').getChildren().length === 1 && textfield.getValue() !==''){\n          // if we have exactly one item in the list and text in the textfield, enter will select the item\n          this._selectItem(this.getChildControl('list').getChildren()[0]);\n          textfield.setValue('');\n          this.close();\n        } else if ( text !== \"\" ){\n          // we have tokens and/or textfield input\n          data = {};\n          data[this.getLabelPath()] = text;\n          this.selectItem(data);\n          textfield.setValue('');\n          this.fireDataEvent('enterKeyWithContent', text);\n        } else if (this.getSelection().length){\n          this.fireDataEvent('enterKeyWithContent', \"\");\n        }\n      } else if (key === 'Escape') {\n        this.close();\n      } else if (key !== 'Left' && key !== 'Right') {\n        this.getChildControl('list').handleKeyPress(e);\n      }\n    },\n\n    /**\n     * Event listener for <code>input</code> event on the textfield child\n     *\n     * @param e {qx.event.type.Data} Data Event\n     */\n    _onInputChange: function (e) {\n      var str = e.getData();\n\n      var timer = qx.util.TimerManager.getInstance();\n\n      // check for the old listener\n      if (this.__timerId !== null) {\n        // stop the old one\n        timer.stop(this.__timerId);\n        this.__timerId = null;\n      }\n\n      if (str == null || (str != null && str.length < this.getMinChars())) {\n        this.setText(str);\n        this.close();\n        return false;\n      }\n\n      // start a new listener to update the controller\n      this.__timerId = timer.start(function () {\n        this.search(str);\n        this.__timerId = null;\n      }, 0, this, null, this.getSearchDelay());\n    },\n\n    // overridden\n    _onListPointerDown: function ()\n    {\n      // Apply pre-selected item (translate quick selection to real selection)\n      if (this.__preSelectedItem)\n      {\n        this._selectItem(this.__preSelectedItem);\n        this.__preSelectedItem = null;\n      }\n    },    \n\n    // overridden\n    _onListChangeSelection: function (e)\n    {\n      var current = e.getData();\n      if (current.length > 0)\n      {\n        // Ignore quick context (e.g. pointerover)\n        // and configure the new value when closing the popup afterwards\n        var list = this.getChildControl('list');\n        var popup = this.getChildControl('popup');\n        var context = list.getSelectionContext();\n        if (popup.isVisible() && (context === 'quick' || context === 'key')) {\n          this.__preSelectedItem = current[0];\n        } else {\n          this.__preSelectedItem = null;\n        }\n      }\n    },\n\n    // overridden\n    _onPopupChangeVisibility: function () {\n      this.tabFocus();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n       API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Fire a event to search for a string\n     *\n     * @param str {String} query to search for\n     */\n    search: function (str)\n    {\n      this.getChildControl('list').removeAll();\n      this._dummy.setLabel(this.getSearchingText());\n      this.getChildControl('list').add(this._dummy);\n      this.open();\n      this._search = str;\n      this.fireDataEvent('loadData', str);\n    },\n\n    /**\n     * Populates the list with the data received from the data source\n     *\n     * @param str {String} The string fragment that was used for retrieving\n     *    the autoocomplete data.\n     * @param data {Object} A javascript object that contains the autocomplete\n     *    data\n     * @return {void}\n     */\n    populateList: function (str, data) {\n      this.cache.add(str, qx.data.marshal.Json.createModel(data));\n      var result = this.cache.get(str);\n      if( ! result ) return;\n      var list = this.getChildControl('list');\n      list.removeAll();\n      if (result.getLength() === 0) {\n        this.setText(str);\n        if (this.isCloseWhenNoResults()) {\n          this.close();\n        }\n        return;\n      } else {\n        this.resetText();\n      }\n      this.setLabelOptions({\n        converter: function (value) {\n          return this.highlight(value, str);\n        }.bind(this)\n      });\n\n      for (var i = 0; i < result.getLength(); i++) {\n        if (!this.getSelectOnce() || (this.getSelectOnce() === true && !this._isSelected(result.getItem(i)))) {\n          var item = this._createBoundItem(result.getItem(i), i);\n          this.getChildControl('list').add(item);\n        }\n      }\n    },\n\n    /**\n     * Add a token to the list\n     * @param data {Object} The data of the token. The label to be\n     *      shown must be in the label path ({@link tokenfield.Token#labelPath})\n     *      of the model.\n     * @param selected {Boolean | undefined} Whether the token should be selected\n     */\n    addToken: function (data, selected) {\n      var model = qx.data.marshal.Json.createModel(data);\n      var item = this._createBoundItem(model);\n      var list = this.getChildControl('list');\n      if (!this.getSelectOnce() || (this.getSelectOnce() === true && !this._isSelected(model))) {\n        if (list.hasChildren() && list.getChildren()[0] === this._dummy) {\n          list.remove(this._dummy);\n        }\n        list.add(item);\n      }\n      if (selected && !this._isSelected(model)) {\n        this._selectItem(item);\n      }\n    },\n\n    /**\n     * Selects a ListItem that matches the given data's label.\n     * If there is none, one gets created.\n     * @param data {Map} model\n     */\n    selectItem: function (data) {\n      var model = qx.data.marshal.Json.createModel(data);\n      var label = model.get(this.getLabelPath());\n      var item;\n      var isInSelection = false;\n      this.getSelection().some(function (item) {\n        if ( item instanceof this._tokenClass && item.getLabel() === label) {\n          isInSelection = true;\n          return true;\n        }\n      },this);\n      if (isInSelection) {\n        return;\n      }\n      this.getChildControl('list').getChildren().some(function (child) {\n        if (child.getLabel() === label) {\n          item = child;\n          return true;\n        }\n      }, this);\n      if (!item) {\n        item = this._createBoundItem(model);\n      }\n      this._selectItem(item);\n    },\n\n    /**\n     * Removes a token from the selection if it matches the data label.\n     * @param data {Map} model\n     */\n    deselectItem: function (data) {\n      var model = qx.data.marshal.Json.createModel(data);\n      var label = model.get(this.getLabelPath());\n      this.getSelection().forEach(function (item) {\n        if (label && item.getLabel() === label) {\n          this._deselectItem(item);\n          return true;\n        }\n      }, this);\n    },\n\n    /**\n     * Tests and see if the model is already selected or not\n     *\n     * @param model {qx.core.Object} Model to be tested\n     * @returns {Boolean}\n     */\n    _isSelected: function (model)\n    {\n      var selection = this.getModelSelection();\n      var item = null;\n      for (var i = 0; i < selection.getLength(); i++)\n      {\n        item = selection.getItem(i);\n        if (item && model && item.get(this.getLabelPath()) === model.get(this.getLabelPath())) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Removes an item from the selection\n     *\n     * @param item {qx.ui.form.ListItem} The List Item to be removed from the selection\n     */\n    _deselectItem: function (item) {\n      if (item && item.constructor === this._tokenClass) {\n        this.removeFromSelection(item);\n        this.fireDataEvent('removeItem', item);\n        item.destroy();\n      }\n    },\n\n    // overridden\n    getChildrenContainer: function () {\n      return this;\n    },\n\n    /**\n     * Resets the widget\n     */\n    reset: function () {\n      this.getSelection().forEach(function (item) {\n        if (item instanceof this._tokenClass) {\n          this.removeFromSelection(item);\n          item.destroy();\n        }\n      }, this);\n      this.getChildren().forEach(function (item) {\n        if (item instanceof this._tokenClass) {\n          this.remove(item);\n          item.destroy();\n        }\n      }, this);\n      this.getChildControl('textfield').setValue('');\n      this.getChildControl('list').removeAll();\n      this.getChildControl('list').add(this._dummy);\n    },\n\n    /**\n     * Adds an item to the selection\n     *\n     * @param old {qx.ui.form.ListItem} The List Item to be added to the selection\n     */\n    _selectItem: function (old) {\n      if (old && old.constructor === this._tokenClass) {\n        var item = this.getSelectOnce() ? old : this.__createItem();\n        item.setAppearance('tokenitem');\n        if( old.getModel() ){\n          item.setLabel(old.getModel().get(this.getLabelPath()));\n          item.setModel(old.getModel());\n        } else {\n          //todo this shouldn't happen.\n          this.warn('Cannot select item.');\n          return;\n        }\n        // close button\n        if( this.getShowCloseButton() === false){\n          item.setShow('label');\n        } else {\n          item.setIconPosition('right');\n          item.getChildControl('icon').setAnonymous(false);\n          // clicking on icon deselects item\n          item.getChildControl('icon').addListener('click', function (e) {\n            if (this.__selected) {\n              this.__selected.removeState('head');\n              this.__selected = null;\n            }\n            this._deselectItem(item);\n            e.stop();\n            this.tabFocus();\n          }, this);\n          // hovering over icon adds the 'close' state\n          item.getChildControl('icon').addListener('pointerover', function (e) {\n            item.addState('close');\n          });\n          item.getChildControl('icon').addListener('pointerout', function (e) {\n            item.removeState('close');\n          });\n          // hovering over token shows close button\n          // this should really be done in the appearance theme\n          item.addListener('pointerover', function (e) {\n            this.__imageSource = item.getChildControl('icon').getSource();\n            item.getChildControl('icon').setSource(\"decoration/window/close-active.png\");\n          });\n          item.addListener('pointerout', function (e) {\n            if( this.__imageSource ) {\n              item.getChildControl('icon').setSource(this.__imageSource);\n            }\n          });\n        }\n        // clicking on item adds the 'head' state\n        item.addListener('click', function (e) {\n          item.addState('head');\n          if (this.__selected != null && this.__selected !== item) {\n            this.__selected.removeState('head');\n          }\n          this.__selected = item;\n          e.stop();\n        }, this);\n        // double-clicking on item reverts token into editable text\n        item.addListener('dblclick', function (e) {\n          if (this.__selected) {\n            this.__selected.removeState('head');\n            this.__selected = null;\n          }          \n          var textfield = this.getChildControl('textfield');\n          this._addBefore(textfield,item);\n          var label = item.getLabel();\n          this._deselectItem(item);\n          textfield.setValue(label);\n          textfield.selectAllText();\n          this.tabFocus();\n          this.search(label);\n        }, this);\n        // 'facebook' style tokens\n        if (this.getStyle() !== 'facebook') {\n          item.getChildControl('label').setWidth(this.getWidth() - 29);\n        }\n        // insert\n        this._addBefore(item, this.getChildControl('textfield'));\n        this.addToSelection(item);\n        this.fireDataEvent('addItem', item);\n        this.getChildControl('textfield').setValue('');\n\n        // if the selected one was the last one, include dummy item\n        if (this.getChildControl('list').getChildren() && this.getChildControl('list').getChildren().length === 0) {\n          this.setHintText(this.getTypeInText());\n          this.getChildControl('list').add(this._dummy);\n        }\n      }\n    },\n\n    /**\n     * Highlight the searched string fragment\n     *\n     * @param value {String} The phrase containing the frament to be highlighted\n     * @param query {String} The string fragment that should be highlighted\n     * @return {String} TODOC\n     */\n    highlight: function (value, query) {\n      // if the query contains a defined wildcard character, skip highlighting\n      var isWildcard = this.getWildcards() \n        && this.getWildcards().find(function(w){return query.indexOf(w)>-1}) !== undefined;\n      if ( isWildcard) return value;\n      // match pattern, ignore errors\n      try{\n        return value.replace(new RegExp('(?![^&;]+;)(?!<[^<>]*)(' + query + ')(?![^<>]*>)(?![^&;]+;)', 'gi'), '<b>$1</b>');\n      } catch (e) {\n        return value;\n      }\n    },\n    \n    /**\n     * Return the models of the visible tokens\n     * @return {Array}\n     */\n    getTokenModels : function(){\n      var models = [];\n      this.getChildren().forEach( function(child){\n        if( typeof child.getModel === \"function\" ){\n          models.push(child.getModel());\n        }\n      });\n      return models;\n    },\n  \n    /**\n     * Return the labels of the visible tokens\n     * @return {Array}\n     */\n    getTokenLabels : function(){\n      var labels = [];\n      this.getChildren().forEach( function(child){\n        if( typeof child.getModel === \"function\" ){ // todo better check\n          labels.push(child.getLabel());\n        }\n      });\n      return labels;\n    },\n  \n    /**\n     * Returns the labels of the tokens and the textfield content, joined together\n     * by the given separator.\n     * @param tokenSeparator {String} The character to use as separator. Defaults to \" \".\n     * @return {String}\n     */\n    getTextContent : function (tokenSeparator) {\n      if( tokenSeparator === undefined){\n        tokenSeparator = \" \";\n      }\n      var content = [];\n      this.getChildren().forEach( function(child){\n        if( child === this._dummy) return;\n        if( typeof child.getModel === \"function\" ){ // todo better check\n          content.push(child.getLabel());\n        } else if( typeof child.getValue === \"function\" && child.getValue() ) { // todo better check\n          content.push(child.getValue());\n        }\n      });\n      return content.join(tokenSeparator).trim();\n    },\n  \n    /**\n     * Returns the position of the input field\n     * @return {number}\n     */\n    getInputPosition: function(){\n      return this._getChildren().indexOf(this.getChildControl('textfield'));\n    }\n  \n  },\n  \n \n  /*\n   *****************************************************************************\n      DESTRUCTOR\n   *****************************************************************************\n   */\n  destruct: function () {\n    this._disposeObjects('_dummy', 'cache');\n  }\n});\n"
  ]
}